service: src

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

useDotenv: true
custom:
  REGION: ${env:REGION}
  nodejsVer: nodejs14.x
  memorySize: 128
  timeout: 300
  TZ: Asia/Tokyo
  SLACK_WEBHOOK_URL: ${env:SLACK_WEBHOOK_URL}
  dailyBudget: 20

provider:
  name: aws
  region: ${self:custom.REGION}
  runtime: ${self:custom.nodejsVer}
  memorySize: ${self:custom.memorySize}
  timeout: ${self:custom.timeout}

layers:
  layerName:
    path: lambdaLayer
    description: nodejs package layers


plugins:
  - serverless-dotenv-plugin
  - serverless-offline

functions:
  slack-notify:
    handler: src/slack-notify.handler
    name: slack-notify
    events:
      - sns:
          arn: !Ref snsTopic
          topicName: snsTopic
    environment:
      TZ: ${self:custom.TZ}
      SLACK_WEBHOOK_URL: ${self:custom.SLACK_WEBHOOK_URL}
    layers:
      # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
      - { Ref: LayerNameLambdaLayer }

resources:
  Description: "Set billing/budget alerts for the AWS account."
  Resources:
    dailyBudget:
      Type: "AWS::Budgets::Budget"
      Properties:
        # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-budgets-budget-budgetdata.html
        Budget:
          BudgetName: Daily
          BudgetType: COST
          TimeUnit: DAILY
          BudgetLimit:
            Amount: ${self:custom.dailyBudget}
            Unit: USD
        # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-budgets-budget-notification.html
        NotificationsWithSubscribers:
          - Notification:
              NotificationType: ACTUAL
              ComparisonOperator: GREATER_THAN
              Threshold: 50 # 1st alert sent when % of Daily total is spent.
              ThresholdType: PERCENTAGE
            Subscribers:
            - SubscriptionType: SNS
              Address: { Ref: snsTopic }
          - Notification:
              NotificationType: ACTUAL
              ComparisonOperator: GREATER_THAN
              Threshold: 90 # 2nd alert sent when % of Daily total is spent.
              ThresholdType: PERCENTAGE
            Subscribers:
            - SubscriptionType: SNS
              Address: { Ref: snsTopic }

    snsTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: aws-budget-alert-to-slack-topic
        TopicName: aws-budget-alert-to-slack-topic

    # How to fix ERORR "Your budget must have permissions to send a notification to your topic " on AWS
    # https://stackoverflow.com/questions/70021257/how-to-fix-erorr-your-budget-must-have-permissions-to-send-a-notification-to-yo
    snsTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          {
            "Version": "2008-10-17",
            "Id": "__default_policy_ID",
            "Statement": [
              {
                "Sid": "AWSBudgetsSNSPublishingPermissions",
                "Effect": "Allow",
                "Principal": {
                  "Service": "budgets.amazonaws.com"
                },
                "Action": "SNS:Publish",
                "Resource": !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:aws-budget-alert-to-slack-topic"
            },
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                  "SNS:GetTopicAttributes",
                  "SNS:SetTopicAttributes",
                  "SNS:AddPermission",
                  "SNS:RemovePermission",
                  "SNS:DeleteTopic",
                  "SNS:Subscribe",
                  "SNS:ListSubscriptionsByTopic",
                  "SNS:Publish",
                  "SNS:Receive"
              ],
              "Resource": !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:aws-budget-alert-to-slack-topic",
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": !Ref "AWS::AccountId"
                }
              }
            }
          ]
        }
        Topics:
          - { Ref: snsTopic }


  Outputs:
    DailyBudgetId:
      Value: 
        Ref: dailyBudget
    snsTopicArn:
      Description: "ARN of SNS Topic"
      Value:
        Ref: snsTopic
