service: lambda-cw-service

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

useDotenv: true
custom:
  REGION: ${env:REGION}
  nodejsVer: nodejs14.x
  memorySize: 128
  timeout: 300
  TZ: Asia/Tokyo
  SLACK_WEBHOOK_URL: ${env:SLACK_WEBHOOK_URL}

provider:
  name: aws
  region: ${self:custom.REGION}
  runtime: ${self:custom.nodejsVer}
  memorySize: ${self:custom.memorySize}
  timeout: ${self:custom.timeout}

layers:
  layerName:
    path: lambdaLayer
    description: nodejs package layers

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

functions:
  cwlog-slack-notify:
    handler: lambda-cw-service/cwlog-slack-notify.handler
    name: cwlog-slack-notify
    # CloudWatch > Logs > Log groups
    # https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html
    # https://www.serverless.com/framework/docs/providers/aws/events/cloudwatch-log
    events:
      - cloudwatchLog:
          logGroup: '/aws/lambda/slack-notify'
          filter: ERROR
    environment:
      TZ: ${self:custom.TZ}
      SLACK_WEBHOOK_URL: ${self:custom.SLACK_WEBHOOK_URL}
    layers:
      # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
      - { Ref: LayerNameLambdaLayer }


